
auth_param basic program /usr/lib/squid/digest_pw_auth /etc/squid/passwords
auth_param basic realm proxy
acl authenticated proxy_auth REQUIRED
http_access allow authenticated



# Example rule allowing access from your local networks.
# Adapt to list your (internal) IP networks from where browsing
# should be allowed
acl localnet src 67.170.21.0-67.170.21.255# RFC 1122 "this" network (LAN)


acl SSL_ports port 443
acl Safe_ports port 80		# http
acl Safe_ports port 21		# ftp
acl Safe_ports port 443		# https
acl Safe_ports port 70		# gopher
acl Safe_ports port 210		# wais
acl Safe_ports port 1025-65535	# unregistered ports
acl Safe_ports port 280		# http-mgmt
acl Safe_ports port 488		# gss-http
acl Safe_ports port 591		# filemaker
acl Safe_ports port 777		# multiling http


#
# Recommended minimum Access Permission configuration:
#
# Deny requests to certain unsafe ports
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

# This default configuration only allows localhost requests because a more
# permissive Squid installation could introduce new attack vectors into the
# network by proxying external TCP connections to unprotected services.
http_access allow localhost

# The two deny rules below are unnecessary in this default configuration
# because they are followed by a "deny all" rule. However, they may become
# critically important when you start allowing external requests below them.

# Protect web applications running on the same server as Squid. They often
# assume that only local users can access them at "localhost" ports.
http_access deny to_localhost

# Protect cloud servers that provide local users with sensitive info about
# their server via certain well-known link-local (a.k.a. APIPA) addresses.
http_access deny to_linklocal

#
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#
include /etc/squid/conf.d/*.conf

# For example, to allow access from your local networks, you may uncomment the
# following rule (and/or add rules that match your definition of "local"):
http_access allow localnet ## PT edit

# And finally deny all other access to this proxy
http_access deny all

                # (pt)keeping this section for anticipated use of bump mode for https 
                #
                #	SSL Bump Mode Options:
                #	    In addition to these options ssl-bump requires TLS/SSL options.
                #
                #	   generate-host-certificates[=<on|off>]
                #			Dynamically create SSL server certificates for the
                #			destination hosts of bumped CONNECT requests.When
                #			enabled, the cert and key options are used to sign
                #			generated certificates. Otherwise generated
                #			certificate will be selfsigned.
                #			If there is a CA certificate lifetime of the generated
                #			certificate equals lifetime of the CA certificate. If
                #			generated certificate is selfsigned lifetime is three
                #			years.
                #			This option is enabled by default when ssl-bump is used.
                #			See the ssl-bump option above for more information.
                #
                #	   dynamic_cert_mem_cache_size=SIZE
                #			Approximate total RAM size spent on cached generated
                #			certificates. If set to zero, caching is disabled. The
                #			default value is 4MB.
                #
                #	TLS / SSL Options:
                #
                #	   tls-cert=	Path to file containing an X.509 certificate (PEM format)
                #			to be used in the TLS handshake ServerHello.
                #
                #			If this certificate is constrained by KeyUsage TLS
                #			feature it must allow HTTP server usage, along with
                #			any additional restrictions imposed by your choice
                #			of options= settings.
                #
                #			When OpenSSL is used this file may also contain a
                #			chain of intermediate CA certificates to send in the
                #			TLS handshake.
                #
                #			When GnuTLS is used this option (and any paired
                #			tls-key= option) may be repeated to load multiple
                #			certificates for different domains.
                #
                #			Also, when generate-host-certificates=on is configured
                #			the first tls-cert= option must be a CA certificate
                #			capable of signing the automatically generated
                #			certificates.
                #
                #	   tls-key=	Path to a file containing private key file (PEM format)
                #			for the previous tls-cert= option.
                #
                #			If tls-key= is not specified tls-cert= is assumed to
                #			reference a PEM file containing both the certificate
                #			and private key.
                #
                #	   cipher=	Colon separated list of supported ciphers.
                #			NOTE: some ciphers such as EDH ciphers depend on
                #			      additional settings. If those settings are
                #			      omitted the ciphers may be silently ignored
                #			      by the OpenSSL library.
                #
                #	   options=	Various SSL implementation options. The most important
                #			being:
                #
                #			    NO_SSLv3    Disallow the use of SSLv3
                #
                #			    NO_TLSv1    Disallow the use of TLSv1.0
                #
                #			    NO_TLSv1_1  Disallow the use of TLSv1.1
                #
                #			    NO_TLSv1_2  Disallow the use of TLSv1.2
                #
                #			    SINGLE_DH_USE
                #				      Always create a new key when using
                #				      temporary/ephemeral DH key exchanges
                #
                #			    SINGLE_ECDH_USE
                #				      Enable ephemeral ECDH key exchange.
                #				      The adopted curve should be specified
                #				      using the tls-dh option.
                #
                #			    NO_TICKET
                #				      Disable use of RFC5077 session tickets.
                #				      Some servers may have problems
                #				      understanding the TLS extension due
                #				      to ambiguous specification in RFC4507.
                #
                #			    ALL       Enable various bug workarounds
                #				      suggested as "harmless" by OpenSSL
                #				      Be warned that this reduces SSL/TLS
                #				      strength to some attacks.
                #
                #			See the OpenSSL SSL_CTX_set_options documentation for a
                #			more complete list.
                #
                #	   clientca=	File containing the list of CAs to use when
                #			requesting a client certificate.
                #
                #	   tls-cafile=	PEM file containing CA certificates to use when verifying
                #			client certificates. If not configured clientca will be
                #			used. May be repeated to load multiple files.
                #
                #	   capath=	Directory containing additional CA certificates
                #			and CRL lists to use when verifying client certificates.
                #			Requires OpenSSL or LibreSSL.
                #
                #	   crlfile=	File of additional CRL lists to use when verifying
                #			the client certificate, in addition to CRLs stored in
                #			the capath. Implies VERIFY_CRL flag below.
                #
                #	   tls-dh=[curve:]file
                #			File containing DH parameters for temporary/ephemeral DH key
                #			exchanges, optionally prefixed by a curve for ephemeral ECDH
                #			key exchanges.
                #			See OpenSSL documentation for details on how to create the
                #			DH parameter file. Supported curves for ECDH can be listed
                #			using the "openssl ecparam -list_curves" command.
                #			WARNING: EDH and EECDH ciphers will be silently disabled if
                #				 this option is not set.
                #
                #	   sslflags=	Various flags modifying the use of SSL:
                #			    DELAYED_AUTH
                #				Don't request client certificates
                #				immediately, but wait until acl processing
                #				requires a certificate (not yet implemented).
                #			    CONDITIONAL_AUTH
                #				Request a client certificate during the TLS
                #				handshake, but ignore certificate absence in
                #				the TLS client Hello. If the client does
                #				supply a certificate, it is validated.
                #			    NO_SESSION_REUSE
                #				Don't allow for session reuse. Each connection
                #				will result in a new SSL session.
                #			    VERIFY_CRL
                #				Verify CRL lists when accepting client
                #				certificates.
                #			    VERIFY_CRL_ALL
                #				Verify CRL lists for all certificates in the
                #				client certificate chain.
                #
                #	   tls-default-ca[=off]
                #			Whether to use the system Trusted CAs. Default is OFF.
                #
                #	   tls-no-npn	Do not use the TLS NPN extension to advertise HTTP/1.1.
                #
                #	   sslcontext=	SSL session ID context identifier.
                #
                #	Other Options:
                #
                #	   connection-auth[=on|off]
                #	                use connection-auth=off to tell Squid to prevent
                #	                forwarding Microsoft connection oriented authentication
                #			(NTLM, Negotiate and Kerberos)
                #
                #	   disable-pmtu-discovery=
                #			Control Path-MTU discovery usage:
                #			    off		lets OS decide on what to do (default).
                #			    transparent	disable PMTU discovery when transparent
                #					support is enabled.
                #			    always	disable always PMTU discovery.
                #
                #			In many setups of transparently intercepting proxies
                #			Path-MTU discovery can not work on traffic towards the
                #			clients. This is the case when the intercepting device
                #			does not fully track connections and fails to forward
                #			ICMP must fragment messages to the cache server. If you
                #			have such setup and experience that certain clients
                #			sporadically hang or never complete requests set
                #			disable-pmtu-discovery option to 'transparent'.
                #
                #	   name=	Specifies a internal name for the port. Defaults to
                #			the port specification (port or addr:port)
                #
                #	   tcpkeepalive[=idle,interval,timeout]
                #			Enable TCP keepalive probes of idle connections.
                #			In seconds; idle is the initial time before TCP starts
                #			probing the connection, interval how often to probe, and
                #			timeout the time before giving up.
                #
                #	   require-proxy-header
                #			Require PROXY protocol version 1 or 2 connections.
                #			The proxy_protocol_access is required to permit
                #			downstream proxies which can be trusted.
                #
                #	   worker-queues
                #			Ask TCP stack to maintain a dedicated listening queue
                #			for each worker accepting requests at this port.
                #			Requires TCP stack that supports the SO_REUSEPORT socket
                #			option.
                #
                #			SECURITY WARNING: Enabling worker-specific queues
                #			allows any process running as Squid's effective user to
                #			easily accept requests destined to this port.
                #
                #	If you run Squid on a dual-homed machine with an internal
                #	and an external interface we recommend you to specify the
                #	internal address:port in http_port. This way Squid will only be
                #	visible on the internal address.
                #
                #

# Squid normally listens to port 3128
http_port 3128

#  TAG: https_port
#	Usage:  [ip:]port [mode] tls-cert=certificate.pem [options]
#
#	The socket address where Squid will listen for client requests made
#	over TLS or SSL connections. Commonly referred to as HTTPS.
#
#	This is most useful for situations where you are running squid in
#	accelerator mode and you want to do the TLS work at the accelerator
#	level.
#
#	You may specify multiple socket addresses on multiple lines,
#	each with their own certificate and/or options.
#
#	The tls-cert= option is mandatory on HTTPS ports.
#
#	See http_port for a list of modes and options.
#Default:
# none



refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern \/(Packages|Sources)(|\.bz2|\.gz|\.xz)$ 0 0% 0 refresh-ims
refresh_pattern \/Release(|\.gpg)$ 0 0% 0 refresh-ims
refresh_pattern \/InRelease$ 0 0% 0 refresh-ims
refresh_pattern \/(Translation-.*)(|\.bz2|\.gz|\.xz)$ 0 0% 0 refresh-ims
# example pattern for deb packages
#refresh_pattern (\.deb|\.udeb)$   129600 100% 129600
refresh_pattern .		0	20%	4320
